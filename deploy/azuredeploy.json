{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"UniqueId": {
			"type": "string",
			"defaultValue": "[take(uniqueString(resourceGroup().id), 5)]",
			"minLength": 3,
			"maxLength": 5
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]"
		},
		"web_app_name": {
			"type": "string",
			"minLength": 1,
			"maxLength": 40
		},
		"function_app_name": {
			"type": "string",
			"minLength": 1,
			"maxLength": 40
		},
		"signalr_name": {
			"type": "string",
			"minLength": 3,
			"maxLength": 63
		},
		"storage_account_name" : {
			"type": "string"
		},
		"storage_account_type" : {
			"type": "string"
		},
		"blob_storage_connection_string": {
			"type": "string"
		},
		"cosmos_db_connection_string": {
			"type": "string"
		},
		"event_hub_connection_string": {
			"type": "string"
		},
		"custom_vision_endpoint": {
			"type": "string"
		},
		"custom_vision_accessKey": {
			"type": "string"
		},
		"aitrios_url": {
			"type": "string"
		},
		"app_gw_validation_key": {
			"type": "string"
		},
		"aitrios_client_id": {
			"type": "string"
		},
		"aad_tenand_id": {
			"type": "string",
			"defaultValue": ""
		},
		"aad_client_id": {
			"type": "string",
			"defaultValue": ""
		},
		"git_webapp_repo": {
			"type": "string",
			"defaultValue": ""	
		},
		"git_webapp_branch": {
			"type": "string",
			"defaultValue": ""	
		},
		"git_functionsapp_repo": {
			"type": "string",
			"defaultValue": ""	
		},
		"git_functionsapp_branch": {
			"type": "string",
			"defaultValue": ""	
		}
	},
	"variables": {
		"apps": {
			"apiVersion": "2022-03-01",
			"skuName": "S1",
			"tier": "Standard",
			"size": "S1",
			"family": "S",
			"hostingPlan": "[format('{0}-AppHost-{1}', parameters('web_app_name'),parameters('UniqueID'))]",
			"functionsName": "[format('{0}-{1}', parameters('function_app_name'),parameters('UniqueID'))]",
			"webappName": "[parameters('web_app_name')]"
		},
		"signalr": {
			"apiVersion": "2022-02-01",
			"sku": "Free_F1",
			"skuTier": "Free",
			"size": "F1",
			"name": "[format('{0}-{1}', parameters('signalr_name'),parameters('UniqueID'))]"
		},
		"storageAcct": {
			"apiVersion": "2021-09-01",
			"sku": "[parameters('storage_account_type')]",
			"tier": "Standard",
			"name": "[toLower(format('{0}{1}', parameters('storage_account_name'),parameters('UniqueID')))]"
		},

		"githubrepo": {
			"webAppRepoUrl": "[parameters('git_webapp_repo')]",
			"webAppBranch": "[parameters('git_webapp_branch')]",
			"functionsRepoUrl": "[parameters('git_functionsapp_repo')]",
			"functionsBranch": "[parameters('git_functionsapp_branch')]"
		}
	},
	"resources": [
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "[variables('storageAcct').apiVersion]",
			"name": "[variables('storageAcct').name]",
			"location": "[parameters('location')]",
			"tags": {},
			"sku": {
				"name": "[variables('storageAcct').sku]"
			},
			"kind": "StorageV2"
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "[variables('apps').apiVersion]",
			"name": "[variables('apps').hostingPlan]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcct').name)]"
			],
			"sku": {
				"name": "[variables('apps').skuName]",
				"tier": "[variables('apps').tier]",
				"size": "[variables('apps').size]",
				"family": "[variables('apps').family]",
				"capacity": 1
			},
			"kind": "app",
			"properties": {
				"reserved": false
			}
		},
		{
			"type": "Microsoft.SignalRService/SignalR",
			"apiVersion": "[variables('signalr').apiVersion]",
			"name": "[variables('signalr').name]",
			"location": "[parameters('location')]",
			"tags": {},
			"sku": {
				"name": "[variables('signalr').sku]",
				"tier": "[variables('signalr').skuTier]",
				"capacity": 1
			},
			"kind": "SignalR",
			"dependsOn": [
			],
			"properties": {
				"tls": {
					"clientCertEnabled": false
				},
				"features": [{
					"flag": "ServiceMode",
					"value": "Classic",
					"properties": {}
				}],
				"cors": {
					"allowedOrigins": [
						"[toLower(format('https://{0}.azurewebsites.net', variables('apps').webappName))]",
						"http://localhost:8000"
					]
				}
			}

		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "[variables('apps').apiVersion]",
			"name": "[variables('apps').webappName]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcct').name)]",
				"[resourceId('Microsoft.Web/serverfarms', variables('apps').hostingPlan)]"
			],
			"tags": {},
			"kind": "app",
			"properties": {
				"enabled": true,
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('apps').hostingPlan)]"
			}
		},
		{
			"type": "Microsoft.Web/sites/config",
			"apiVersion": "[variables('apps').apiVersion]",
			"name": "[concat(variables('apps').webappName, '/appsettings')]",
			"dependsOn": [
				"[resourceId('Microsoft.SignalRService/SignalR', variables('signalr').name)]",
				"[resourceId('Microsoft.Web/Sites', variables('apps').webappName)]"
			],
			"properties": {
				"AzureAD__TenantId" :  "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), '', parameters('aad_tenand_id'))]",
				"AzureAD__ClientId" :  "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), '', parameters('aad_client_id'))]",
				"AzureAD__Instance" :  "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), '', 'https://login.microsoftonline.com/')]",
				"AzureAD__CallbackPath" : "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), '', '/signin-oidc')]",
				"AzureAD__SignedOutCallbackPath" :  "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), '', '/signout-callback-oidc')]",
				"Azure__UseAAD": "[if(or(empty(parameters('aad_tenand_id')), empty(parameters('aad_client_id'))), 'false', 'true')]",
				"Azure__Blob__ConnectionString": "[parameters('blob_storage_connection_string')]",
				"Azure__CosmosDb__ConnectionString": "[parameters('cosmos_db_connection_string')]",
				"Azure__CustomVision__EndPoint": "[parameters('custom_vision_endpoint')]",
				"Azure__CustomVision__AccessKey": "[parameters('custom_vision_accessKey')]",
				"Azure__SonyAPI__AppGwValidation": "[parameters('app_gw_validation_key')]",
				"Azure__SonyAPI__BaseUrl": "[parameters('aitrios_url')]",
				"Azure__SonyAPI__ClientId": "[parameters('aitrios_client_id')]",
				"Azure__SignalR__ConnectionString": "[concat('Endpoint=https://', toLower(variables('signalr').name), '.service.signalr.net;AccessKey=', listKeys(resourceId('Microsoft.SignalRService/signalR', toLower(variables('signalr').name)), variables('signalr').apiVersion).primaryKey, ';Version=1.0;')]"
			}
		},
		{
			"condition" : "[and(not(empty(variables('githubrepo').webAppRepoUrl)), not(empty(variables('githubrepo').webAppBranch)))]",
			"type": "Microsoft.Web/sites/sourcecontrols",
			"name": "[concat(variables('apps').webappName, '/web')]",
			"apiVersion": "[variables('apps').apiVersion]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/Sites', variables('apps').webappName)]",
				"[resourceId('Microsoft.Web/Sites/config', variables('apps').webappName, 'appsettings')]"
			],
			"properties": {
				"RepoUrl": "[variables('githubrepo').webAppRepoUrl]",
				"branch": "[variables('githubrepo').webAppBranch]",
				"IsManualIntegration": true
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "[variables('apps').apiVersion]",
			"name": "[variables('apps').functionsName]",
			"location": "[parameters('location')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('storageAcct').name)]",
				"[resourceId('Microsoft.Web/serverfarms', variables('apps').hostingPlan)]"
			],
			"tags": {},
			"kind": "functionapp",
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"name": "[variables('apps').functionsName]",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('apps').hostingPlan)]",
				"clientAffinityEnabled": false,
				"enabled": true,
				"siteConfig": {
					"alwaysOn": false,
					"cors": {
						"allowedOrigins": [
							"*"
						]
					},
					"appSettings": [{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~4"
						},
						{
							"name": "AzureWebJobsSecretStorageType",
							"value": "Files"
						}
					]
				}
			},
			"resources": []
		},
		{
			"type": "Microsoft.Web/sites/config",
			"apiVersion": "[variables('apps').apiVersion]",
			"name": "[concat(variables('apps').functionsName, '/appsettings')]",
			"dependsOn": [
				"[resourceId('Microsoft.SignalRService/SignalR', variables('signalr').name)]",
				"[resourceId('Microsoft.Web/Sites', variables('apps').functionsName)]"
			],
			"properties": {
				"FUNCTIONS_WORKER_RUNTIME": "dotnet",
				"FUNCTIONS_EXTENSION_VERSION": "~4",
				"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAcct').name,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAcct').name), variables('storageAcct').apiVersion).keys[0].value)]",
				"AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAcct').name,';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAcct').name), variables('storageAcct').apiVersion).keys[0].value)]",
				"AzureSignalRConnectionString": "[concat('Endpoint=https://', toLower(variables('signalr').name), '.service.signalr.net;AccessKey=', listKeys(resourceId('Microsoft.SignalRService/signalR', toLower(variables('signalr').name)), variables('signalr').apiVersion).primaryKey, ';Version=1.0;')]",
				"CosmosDbConnectionString": "[parameters('cosmos_db_connection_string')]",
				"EventHubConnectionString": "[parameters('event_hub_connection_string')]",
				"BlobConnectionString" : "[parameters('blob_storage_connection_string')]",
				"SOLCosmosDbLeasePrefix": "parameters('UniqueID')"

			}
		},
		{
			"condition" : "[and(not(empty(variables('githubrepo').functionsRepoUrl)), not(empty(variables('githubrepo').functionsBranch)))]",
			"type": "Microsoft.Web/sites/sourcecontrols",
			"name": "[concat(variables('apps').functionsName, '/web')]",
			"apiVersion": "[variables('apps').apiVersion]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/Sites', variables('apps').functionsName)]",
				"[resourceId('Microsoft.Web/Sites/config', variables('apps').functionsName, 'appsettings')]"
			],
			"properties": {
				"RepoUrl": "[variables('githubrepo').functionsRepoUrl]",
				"branch": "[variables('githubrepo').functionsBranch]",
				"IsManualIntegration": true
			}
		}	
	]
}