@{
    ViewData["Title"] = "Sony IMX 500";
}

@section scripts {
    <script type="text/javascript" src="/js/SonyApi.js"></script>
    <script type="text/javascript" src="/js/Token.js"></script>
    <script type="text/javascript" src="/js/BlobStorage.js"></script>
    <script type="text/javascript" src="/js/CosmosDb.js"></script>
    <script type="text/javascript" src="/js/CustomVision.js"></script>}

<body>
    <!-- Main content -->
    <div id="loader" class="loading" style="display:none"></div>
    <div class="container-fluid" style="min-width:640px">
        <div class="row">
            <div class="col-12 col-sm-12">
                <div class="card card-primary card-tabs">
                    <div class="card-header p-0 pt-1">
                        <ul class="nav nav-tabs" id="tab-main" role="tablist">
                            <li class="nav-item">
                                <a class="nav-link active" id="tab-setup-label" data-toggle="pill" href="#tabs-setup" role="tab" aria-controls="tabs-setup" aria-selected="true">Setup</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-telemetry-label" data-toggle="pill" href="#tab-telemetry" role="tab" aria-controls="tab-telemetry" aria-selected="false">Telemetry/Events</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-imageGallery-label" data-toggle="pill" href="#tab-imageGallery" role="tab" aria-controls="tab-imageGallery" aria-selected="false">Images from IMX500</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-cosmosDb-label" data-toggle="pill" href="#tab-cosmosDb" role="tab" aria-controls="tab-cosmosDb" aria-selected="false">AI Inference History</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-apiOutput-label" data-toggle="pill" href="#tab-api-output" role="tab" aria-controls="tab-api-output" aria-selected="false">API Output</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" id="tab-other-label" data-toggle="pill" href="#tab-other" role="tab" aria-controls="tab-other" aria-selected="false">Other</a>
                            </li>
                        </ul>
                    </div>
                    <div class="card-body">
                        <div class="tab-content" id="tab-main">
                            <!--Set up Tab-->
                            <div class="tab-pane fade show active" id="tabs-setup" role="tabpanel" aria-labelledby="tab-setup-label">
                                <!-- Summary -->
                                <div class="row">
                                </div>

                                <!-- Progress Bar -->
                                <div class="row">
                                    <div class="col-md-10">
                                        <div class="card">
                                            <div class="card-header">
                                                <h3 class="card-title">Overall Progress</h3>
                                            </div>
                                            <div class="card-body">
                                                <div class="progress mb-3">
                                                    <div class="progress-bar bg-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%">
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!-- End of Progress Bar row -->

                                <div class="row">
                                    <div class="col-md-10">
                                        <div class="card">
                                            <div class="card-body">
                                                <div id="accordion">
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionSetup">
                                                                    Step 1 : Login to acquire "Access Token" to Sony API.
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionSetup" class="collapse show" data-parent="#accordion">
                                                            <form id="loginForm">
                                                                <div class="card-body">
                                                                    <div class="card card-widget widget-user-2">
                                                                        <div class="widget-user-header bg-warning">
                                                                            <div class="widget-user-image">
                                                                                <i class="fas fa-user" style="float:left;font-size:4em"></i>
                                                                            </div>
                                                                            <h3 id="userName" class="widget-user-username">User Name</h3>
                                                                            <h5 id="userDesc" class="widget-user-desc">User Desc</h5>
                                                                        </div>
                                                                    </div>
                                                                    <div class="info-box">
                                                                        <div class="info-box-content">
                                                                            <div class="form-group">
                                                                                <label for="clientId">Client ID</label>
                                                                                <input type="text" name="clientId" class="form-control" id="clientId" placeholder="Enter Client ID" value=@ViewData["ClientId"]>
                                                                            </div>
                                                                            <span class="info-box-text">
                                                                                <label for="taToken">Token</label>
                                                                                <textarea id="taToken" class="form-control" cols="30" rows="3"></textarea>
                                                                            </span>
                                                                            <div style="margin-top:0.5em">
                                                                                <button type="button" class="btn btn-outline-dark" id="copyTokenBtn" disabled>
                                                                                    <i class="fas fa-copy"></i> Copy Token
                                                                                </button>
                                                                                <button type="button" class="btn btn-outline-dark" id="pasteTokenBtn">
                                                                                    <i class="fas fa-copy"></i> Paste Token
                                                                                </button>
                                                                            </div>
                                                                            <span class="info-box-text" style="margin-top:0.5em">
                                                                                <label for="spanTokenExpire">Expiration:</label>
                                                                                <span class="info-box-text" style="display:contents" id='spanTokenExpire'></span>
                                                                            </span>
                                                                            <span class="info-box-text" style="margin-top:0.5em">
                                                                                <label for="spanTokenLastUpdate">Last Update:</label>
                                                                                <span class="info-box-text" id='spanTokenLastUpdate' style="display:contents"></span>
                                                                            </span>

                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="card-footer">
                                                                    <div class="footer-div">
                                                                        <div>
                                                                            <button type="button" class="btn btn-success" id="loginBtn">
                                                                                <i class="fas fa-sign-in-alt btn-fa"></i>Login
                                                                            </button>
                                                                            <button type="button" class="btn btn-warning" id="logoutBtn">
                                                                                <i class="fas fa-sign-out-alt btn-fa"></i>Logout
                                                                            </button>
                                                                        </div>
                                                                        <div class="vertical-center">
                                                                            <div class="info-box-text" id='btnLoginResult'></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    <!-- Create Custom Vision -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionCreateBaseCustomVisionProject">
                                                                    Step 2 : Create or Select Custom Vision project
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionCreateBaseCustomVisionProject" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <label for="createBaseCustomVisionProjectForm">Create New Custom Vision Project</label>
                                                                        <form id="createBaseCustomVisionProjectForm">
                                                                            <div class="form-group">
                                                                                <label for="createBaseCustomVisionProjectName">Project Name</label>
                                                                                <input type="text" name="createBaseCustomVisionProjectName" class="form-control" id="createBaseCustomVisionProjectName" placeholder="Enter name of new Custom Vision project" value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createBaseCustomVisionProjectComment">Comment (Optional)</label>
                                                                                <input type="text" name="createBaseCustomVisionProjectComment" class="form-control" id="createBaseCustomVisionProjectComment" placeholder="Enter description of new Custom Vision project" value="">
                                                                            </div>
                                                                        </form>
                                                                        <div class="btnStatusDiv">
                                                                            <button type="button" class="btn btn-success" id="createBaseCustomVisionProjectBtn">
                                                                                <i class="fas fa-plus btn-fa"></i>Create
                                                                            </button>
                                                                            <div class="info-box-text vertical-center" id='createBaseCustomVisionProjectBtnResult'>Place Holder : To be deleted</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <label for="selectCustomVisionProjectListDiv">Select Custom Vision Project</label>
                                                                        <div class="form-group" id="selectCustomVisionProjectListDiv">
                                                                            <select id="selectCustomVisionProjectList" class="form-control select2">
                                                                            </select>
                                                                        </div>
                                                                        <div class="btnStatusDiv">
                                                                            <button type="button" class="btn btn-danger" id="deleteCustomVisionProjectBtn" disabled>
                                                                                <i class="fas fa-trash-alt btn-fa"></i>Delete (Sony API)
                                                                            </button>
                                                                            <div class="info-box-text vertical-center" style="overflow-x:auto" id='deleteCustomVisionProjectBtnResult'>Place Holder : To be deleted</div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Build Custom Vision -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionVisitCustomVision">
                                                                    Step 3 : Build and Train Custom Vision Model
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionVisitCustomVision" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <div class="form-group">
                                                                            <label for="visitCustomVisionProjectList">Custom Vision Project Name</label>
                                                                            <select id="visitCustomVisionProjectList" class="form-control select2">
                                                                            </select>
                                                                        </div>
                                                                        <div class="info-box-text" style="margin-top:0.5em">
                                                                            Visit https://customvision.ai to Upload and Tag photos, and start training.
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="visitCustomVisionBtn" style="width:auto" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Visit CustomVision.ai
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Save Custom Vision -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionSaveCustomVisionModel">
                                                                    Step 4 : Save Custom Vision Model
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionSaveCustomVisionModel" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <form id="saveCustomVisionModelForm">
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelProjectNameList">Project Name</label>
                                                                                <select id="saveCustomVisionModelProjectNameList" class="form-control select2">
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelProjectModelId">Model ID (Optional)</label>
                                                                                <input type="text" name="saveCustomVisionModelProjectModelId" class="form-control" id="saveCustomVisionModelProjectModelId" placeholder="Enter Model ID (E.g. YYMMDD_Name_Model_01)" value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelInitialVersionNumber">Initial Version Number (Optional)</label>
                                                                                <input type="number" name="saveCustomVisionModelInitialVersionNumber" class="form-control" id="saveCustomVisionModelInitialVersionNumber" placeholder="Initial version # Specify it when it is newly saved. Integer(1 to 100)" value="" min="1" max="100">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelFunctionality">Functionality (Optional)</label>
                                                                                <input type="text" name="saveCustomVisionModelFunctionality" class="form-control" id="saveCustomVisionModelFunctionality" placeholder="Functional description. Specify it when saved as NEW. Less than 100 characters." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelVendorName">Vendor Name (Optional)</label>
                                                                                <input type="text" name="saveCustomVisionModelVendorName" class="form-control" id="saveCustomVisionModelVendorName" placeholder="Vendor name. Specify it when saved as NEW. Less than 100 characters." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="saveCustomVisionModelComment">Comment (Optional)</label>
                                                                                <input type="text" name="saveCustomVisionModelComment" class="form-control" id="saveCustomVisionModelComment" placeholder="Description. Within 100 characters." value="">
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="saveCustomVisionModelBtn" disabled>
                                                                        <i class="fas fa-save btn-fa"></i>Save Custom Vision model
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='saveCustomVisionModelBtnResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Convert Model -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionConvertModel">
                                                                    Step 5 : Convert Model
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionConvertModel" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <div class="form-group">
                                                                            <label for="convertModelModelIdList">Model ID</label>
                                                                            <select name="convertModelModelIdList" id="convertModelModelIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                        </div>
                                                                        <div class="form-group">
                                                                            <label for="convertModelDeviceIdList">Device ID (Optional)</label>
                                                                            <select name="convertModelDeviceIdList" id="convertModelDeviceIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="convertModelBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Convert Model
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='convertModelBtnResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="convertModelGetBaseModelStatusBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Get Base Model Status
                                                                    </button>

                                                                    <label for="convertModelGetBaseModelStatusConversionDiv" style="margin-left:1em">Conversion ID : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='convertModelGetBaseModelStatusConversionDiv'></div>

                                                                    <label for="convertModelGetBaseModelStatusStageDiv" style="margin-left:1em">Stage : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='convertModelGetBaseModelStatusStageDiv'></div>

                                                                    <label for="convertModelGetBaseModelStatusBtnResult" style="margin-left:1em">Result : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='convertModelGetBaseModelStatusBtnResult'></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Publish Model -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionPublishModel">
                                                                    Step 6 : Publish Model
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionPublishModel" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <div class="form-group">
                                                                            <label for="publishModelModelIdList">Model ID</label>
                                                                            <select name="publishModelModelIdList" id="publishModelModelIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                        </div>
                                                                        <div class="form-group">
                                                                            <label for="publishModelDeviceIdList">Device ID (Optional)</label>
                                                                            <select name="publishModelDeviceIdList" id="publishModelDeviceIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="publishModelBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Publish Model
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='publishModelBtnResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="publishModelGetBaseModelStatusBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Get Base Model Status
                                                                    </button>

                                                                    <label for="publishModelGetBaseModelStatusConversionIdDiv" style="margin-left:1em">Conversion ID : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='publishModelGetBaseModelStatusConversionIdDiv'></div>

                                                                    <label for="publishModelGetBaseModelStatusStageDiv" style="margin-left:1em">Stage : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='publishModelGetBaseModelStatusStageDiv'></div>

                                                                    <label for="publishModelGetBaseModelStatusBtnResult" style="margin-left:1em">Result : </label>
                                                                    <div class="info-box-text" style="display:inline-block" id='publishModelGetBaseModelStatusBtnResult'></div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Create Deployment -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionCreatePeployConfiguration">
                                                                    Step 7 : Create Deployment
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionCreatePeployConfiguration" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <form id="createDeployConfigurationForm">
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationConfigId">Config ID</label>
                                                                                <input type="text" name="createDeployConfigurationConfigId" class="form-control" id="createDeployConfigurationConfigId" placeholder="configID. Less than 20 characters." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationSensorLoaderVersionNumber">SensorLoader version number</label>
                                                                                <select name="createDeployConfigurationSensorLoaderVersionNumber" id="createDeployConfigurationSensorLoaderVersionNumber" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationSensorVersionNumber">Sensor version number</label>
                                                                                <select name="createDeployConfigurationSensorVersionNumber" id="createDeployConfigurationSensorVersionNumber" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationModelId">Model ID</label>
                                                                                <select name="createDeployConfigurationModelId" id="createDeployConfigurationModelId" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationApFwVersionNumber">ApFw version number</label>
                                                                                <select name="createDeployConfigurationApFwVersionNumber" id="createDeployConfigurationApFwVersionNumber" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationComment">Comment (Optional)</label>
                                                                                <input type="text" name="createDeployConfigurationComment" class="form-control" id="createDeployConfigurationComment" placeholder="Description. Less than 100 characters." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationDeviceTypeList">Device Type (Optional)</label>
                                                                                <select name="createDeployConfigurationDeviceTypeList" id="createDeployConfigurationDeviceTypeList" class="form-control">
                                                                                    <option selected value="">Select Device Type</option>
                                                                                    <option value="00">MPU Based (Type4)</option>
                                                                                    <option value="01">MCU Bsed (Type3)</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationModelVersionNumber">Model Version Number (Optional)</label>
                                                                                <input type="text" name="createDeployConfigurationModelVersionNumber" class="form-control" id="createDeployConfigurationModelVersionNumber" placeholder="Model version number." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationColorMatrixModelList">Color Matrix Mode (Optional)</label>
                                                                                <select name="createDeployConfigurationColorMatrixModelList" id="createDeployConfigurationColorMatrixModelList" class="form-control">
                                                                                    <option selected value="">Select Matrix Mode</option>
                                                                                    <option>none</option>
                                                                                    <option>std</option>
                                                                                    <option>custom</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationColorMatrixFileName">Color Matrix File Name (Optional)</label>
                                                                                <div class="input-group">
                                                                                    <div class="custom-file">
                                                                                        <input type="file" name="createDeployConfigurationColorMatrixFileName" class="custom-file-input" id="createDeployConfigurationColorMatrixFileName">
                                                                                        <label class="custom-file-label" for="createDeployConfigurationColorMatrixFileName">Color tone adjustment Custom settings file (bin) name.</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationGammaModeList">Gamma Mode (Optional)</label>
                                                                                <select name="createDeployConfigurationGammaModeList" id="createDeployConfigurationGammaModeList" class="form-control">
                                                                                    <option selected value="">Select Gamma Mode</option>
                                                                                    <option>none</option>
                                                                                    <option>std</option>
                                                                                    <option>custom</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationGammaFileName">Gamma Correction Custom Setting File (bin) name (Optional)</label>
                                                                                <div class="input-group">
                                                                                    <div class="custom-file">
                                                                                        <input type="file" name="createDeployConfigurationGammaFileName" class="custom-file-input" id="createDeployConfigurationGammaFileName">
                                                                                        <label class="custom-file-label" for="createDeployConfigurationGammaFileName">Gamma Correction Custom settings file (bin) name.</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationLscModeList">LSC Correction Camera Settings (Optional)</label>
                                                                                <select name="createDeployConfigurationLscModeList" id="createDeployConfigurationLscModeList" class="form-control">
                                                                                    <option selected value="">Select LSC Mode</option>
                                                                                    <option>none</option>
                                                                                    <option>std</option>
                                                                                    <option>custom</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationLscFileName">LSC Correction Camera Settings File (bin) name (Optional)</label>
                                                                                <input type="text" name="createDeployConfigurationLscFileName" class="form-control" id="createDeployConfigurationLscFileName" placeholder="LSC Correction Camera Settings file (bin) name." value="">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationPrewbModeList">PreWB adjustment value Camera settings. (Optional)</label>
                                                                                <select name="createDeployConfigurationPrewbModeList" id="createDeployConfigurationPrewbModeList" class="form-control">
                                                                                    <option selected value="">Select PreWB Mode</option>
                                                                                    <option>none</option>
                                                                                    <option>std</option>
                                                                                    <option>custom</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationPrewbFileName">PreWB adjustment value Camera settings (bin) name (Optional)</label>
                                                                                <div class="input-group">
                                                                                    <div class="custom-file">
                                                                                        <input type="file" name="createDeployConfigurationPrewbFileName" class="custom-file-input" id="createDeployConfigurationPrewbFileName">
                                                                                        <label class="custom-file-label" for="createDeployConfigurationPrewbFileName">PreWB adjustment value Camera settings (bin) file.</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationDewarpModeList">Distortion correction Camera settings(bin)type. (Optional)</label>
                                                                                <select name="createDeployConfigurationDewarpModeList" id="createDeployConfigurationDewarpModeList" class="form-control">
                                                                                    <option selected value="">Select Distortion Correction Type</option>
                                                                                    <option>none</option>
                                                                                    <option>std</option>
                                                                                    <option>custom</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="createDeployConfigurationDewarpFileName">Distortion correction Custom settings file(bin)name. (Optional)</label>
                                                                                <div class="input-group">
                                                                                    <div class="custom-file">
                                                                                        <input type="file" name="createDeployConfigurationDewarpFileName" class="custom-file-input" id="createDeployConfigurationDewarpFileName">
                                                                                        <label class="custom-file-label" for="createDeployConfigurationDewarpFileName">Distortion correction Custom settings file(bin)name.</label>
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="createDeployConfigurationBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Create Deploy Configuraion
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='createDeployConfigurationResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="createDeployConfigurationGetDeployConfigurationsBtn">
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Get Deploy Configurations
                                                                    </button>
                                                                    <label for="createDeployConfigurationGetDeployConfigurationsList" style="margin-left:1em">Configuration ID : </label>
                                                                    <div style="display:inline-block">
                                                                        <select name="createDeployConfigurationGetDeployConfigurationsList" id="createDeployConfigurationGetDeployConfigurationsList" class="form-control custom-select" style="min-width:10em"></select>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Deploy Model -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionDeployByConfiguration">
                                                                    Step 8 : Deploy by Configuration
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionDeployByConfiguration" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <form id="deployByConfiguraionForm">
                                                                            <div class="form-group">
                                                                                <label for="deployByConfiguraionFormConfigIdList">Config ID</label>
                                                                                <select name="deployByConfiguraionFormConfigIdList" id="deployByConfiguraionFormConfigIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="deployByConfiguraionDeviceIdList">Device ID</label>
                                                                                <select name="deployByConfiguraionDeviceIdList" id="deployByConfiguraionDeviceIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <div class="btnStatusDiv">
                                                                                    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#deploymentHistoryModal" id="deployByConfiguratonHistoryBtn" disabled>
                                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Get Deploy History
                                                                                    </button>
                                                                                </div>
                                                                            </div>
                                                                            <label for="deployByConfiguraionComment">Comment (Optional)</label>
                                                                            <input type="text" name="deployByConfiguraionComment" class="form-control" id="deployByConfiguraionComment" placeholder="Description. Less than 100 characters." value="">

                                                                            <label for="deployByConfiguraionReplaceModelIdList">Model ID to replace (Optional)</label>
                                                                            <select name="deployByConfiguraionReplaceModelIdList" id="deployByConfiguraionReplaceModelIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="deployByConfiguratonBtn" disabled>
                                                                        <i class="fas fa-external-link-alt btn-fa"></i>Deploy by Configuraion
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='deployByConfiguratonBtnResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Start Upload Inference Result -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionStartUploadInferenceResult">
                                                                    Step 9 : Start/Stop UploadInferenceResult
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionStartUploadInferenceResult" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <form id="startUploadInferenceResultForm">
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultDeviceIdList">Device ID</label>
                                                                                <select name="startUploadInferenceResultDeviceIdList" id="startUploadInferenceResultDeviceIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultFrequencyOfInferences">Frequency of Inference (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultFrequencyOfInferences" class="form-control" id="startUploadInferenceResultFrequencyOfInferences" value="100" placeholder="Specify the frequency of fetching the images (Input Tensor). By default, it fetches for each frame. 1 ~ 2592000"
                                                                                        min="1" , max="2592000">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultMaxDetectionsPerFrame">Number of objects included in 1 frame (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataMaxDetectionPerFrame" class="form-control" id="startUploadRetrainingDataMaxDetectionPerFrame" placeholder="Specify No. of Objects included in 1 frame with respect to the Inference results metadata. 1 ~ 64"
                                                                                        value="" min="1" , max="64">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultCropHOffset">Hoffset for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultCropHOffset" class="form-control" id="startUploadInferenceResultCropHOffset" placeholder="Specify Hoffset for image to crop.  0 ~ 4056" value="" min="0" , max="4056">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultCropVOffset">Vofset for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultCropVOffset" class="form-control" id="startUploadInferenceResultCropVOffset" placeholder="Specify Voffset for image to crop.  0 ~ 3040" value="" min="0" , max="3040">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultCropHSize">Hsize for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultCropHSize" class="form-control" id="startUploadInferenceResultCropHSize" placeholder="Specify Hsizefor image to crop.  0 ~ 4056" value="" min="0" , max="4056">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultCropVSize">Vsize for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultCropVSize" class="form-control" id="startUploadInferenceResultCropVSize" placeholder="Specify VSize for image to crop.  0 ~ 3040" value="" min="0" , max="3040">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultNumberOfInferencesPerMessage">Number of objects included in 1 message (Optional)</label>
                                                                                <input type="number" name="startUploadInferenceResultNumberOfInferencesPerMessage" class="form-control" id="startUploadInferenceResultNumberOfInferencesPerMessage" placeholder="Specify No. of Objects included in 1 frame with respect to the Inference results metadata. 1 ~ 64"
                                                                                        value="" min="1" , max="100">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadInferenceResultModelIdList">Model ID (Optional)</label>
                                                                                <select name="startUploadInferenceResultModelIdList" id="startUploadInferenceResultModelIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="startUploadInferenceResultBtn" disabled>
                                                                        <i class="fas fa-play btn-fa"></i>Start UploadInferenceResult
                                                                    </button>
                                                                    <button type="button" class="btn btn-success" id="stopUploadInferenceResultBtn" disabled>
                                                                        <i class="fas fa-stop btn-fa"></i>Stop UploadInferenceResult
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='btnStartUploadInferenceResultResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <!-- Start Upload Retraining Data -->
                                                    <div class="card card-primary">
                                                        <div class="card-header">
                                                            <h4 class="card-title w-100">
                                                                <a class="d-block w-100" data-toggle="collapse" href="#accordionStartUploadRetrainingData">
                                                                    Step 10 : Start/Stop UploadingRetrainingData
                                                                </a>
                                                            </h4>
                                                        </div>
                                                        <div id="accordionStartUploadRetrainingData" class="collapse" data-parent="#accordion">
                                                            <div class="card-body">
                                                                <div class="info-box">
                                                                    <div class="info-box-content">
                                                                        <form id="startUploadRetrainingDataForm">
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataDeviceIdList">Device ID</label>
                                                                                <select name="startUploadRetrainingDataDeviceIdList" id="startUploadRetrainingDataDeviceIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataModeList">Collection mode (Optional)</label>
                                                                                <select name="startUploadRetrainingDataModeList" id="startUploadRetrainingDataModeList" class="form-control">
                                                                                    <option selected value="">Select Collection Mode</option>
                                                                                    <option value="0">Image</option>
                                                                                    <option value="1" selected>image & Inference results metadata</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataFileFormatList">Image file format (Optional)</label>
                                                                                <select name="startUploadRetrainingDataFileFormatList" id="startUploadRetrainingDataFileFormatList" class="form-control">
                                                                                    <option selected value="">Select Image File Format</option>
                                                                                    <option value="JPG">JPEG</option>
                                                                                    <option value="BMP">Bitmap (BMP)</option>
                                                                                </select>
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataCropHOffset">Hoffset for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataCropHOffset" class="form-control" id="startUploadRetrainingDataCropHOffset" placeholder="Specify Hoffset for image to crop.  0 ~ 4056" min="0" max="4056">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataCropVOffset">Vofset for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataCropVOffset" class="form-control" id="startUploadRetrainingDataCropVOffset" placeholder="Specify Voffset for image to crop.  0 ~ 3040" min="0" max="3040">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataCropHSize">Hsize for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataCropHSize" class="form-control" id="startUploadRetrainingDataCropHSize" placeholder="Specify Hsizefor image to crop.  0 ~ 4056" min="0" max="4056">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataCropVSize">Vsize for Image crop (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataCropVSize" class="form-control" id="startUploadRetrainingDataCropVSize" placeholder="Specify VSize for image to crop.  0 ~ 3040" min="0" max="3040">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataNumImages">Number of Image (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataNumImages" class="form-control" id="startUploadRetrainingDataNumImages" value="3" placeholder="Number of images to be fetched(Input Tensor). When it is 0, continue fetching images until stop instruction is mentioned explicitly. 0 ~ 10000"
                                                                                        min="0" max="10000">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataFrequencyOfImages">Frequency of fetching images (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataFrequencyOfImages" class="form-control" id="startUploadRetrainingDataFrequencyOfImages" value="100" placeholder="Specify the frequency of fetching the images (Input Tensor). By default, it fetches for each frame. 1 ~ 2592000"
                                                                                        min="1" max="2592000">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataMaxDetectionPerFrame">Number of objects included in 1 frame (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataMaxDetectionPerFrame" class="form-control" id="startUploadRetrainingDataMaxDetectionPerFrame" placeholder="Specify No. of Objects included in 1 frame with respect to the Inference results metadata. 1 ~ 64"
                                                                                        min="1" max="64">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataNumInferencePerMessage">Number of inference results to include in one message. (Optional)</label>
                                                                                <input type="number" name="startUploadRetrainingDataNumInferencePerMessage" class="form-control" id="startUploadRetrainingDataNumInferencePerMessage" placeholder="Specify Number of inference results to include in one message (Output Tensor). 1 ~ 100"
                                                                                        min="1" max="100">
                                                                            </div>
                                                                            <div class="form-group">
                                                                                <label for="startUploadRetrainingDataModelIdList">Model ID (Optional)</label>
                                                                                <select name="startUploadRetrainingDataModelIdList" id="startUploadRetrainingDataModelIdList" class="form-control custom-select" style="min-width:10em"></select>
                                                                            </div>
                                                                        </form>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="card-footer">
                                                                <div class="footer-div">
                                                                    <button type="button" class="btn btn-success" id="startUploadRetrainingDataBtn" disabled>
                                                                        <i class="fas fa-play btn-fa"></i>Start UploadRetrainingData
                                                                    </button>
                                                                    <button type="button" class="btn btn-success" id="stopUploadRetrainingDataBtn" disabled>
                                                                        <i class="fas fa-stop btn-fa"></i>Stop UploadRetrainingData
                                                                    </button>
                                                                    <div class="info-box-text vertical-center" id='startUploadRetrainingDataBtnResult'>Place Holder : To be deleted</div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <!-- End of Accordion -->
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Telemetry Tab -->
                            <div class="tab-pane fade" id="tab-telemetry" role="tabpanel" aria-labelledby="tab-telemetry-label">
                                <div class="card-header">
                                    <h4 class="card-title w-100">
                                        <a class="d-block w-100">
                                            Telemetry Ingestion from Event Hubs
                                        </a>
                                    </h4>
                                </div>
                                <div class="card-body">
                                    <div class="info-box">
                                        <div class="info-box-content">
                                            <div class="row" style="margin-bottom:0.5em">
                                                <div class="col-md-9">
                                                    <div class="form-group">
                                                        <label for="telemetryTableFilterList" style="width:10em">Device ID Filter</label>
                                                        <select name="telemetryTableFilterList" id="telemetryTableFilterList" class="form-control custom-select" style="min-width:10em;width:30%"></select>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="div-Button-Right vertical-center" style="margin-top:0">
                                                        <button type="button" class="btn btn-danger" id="clearTelemetryTableBtn">
                                                            <i class="far fa-trash-alt btn-fa"></i>Clear Events
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div id="telemetryTableDiv" class="row" style="min-height:10vh; max-height: 55vh; overflow-y:scroll; overflow-x:hidden">
                                                <table id="telemetryTbl" class="table table-striped" style="max-height: 100%">
                                                    <thead>
                                                    <th>&nbsp;</th>
                                                    <th>Event Time(UTC)</th>
                                                    <th>Device ID</th>
                                                    <th>Model ID</th>
                                                    <th>Event Type</th>
                                                    <th>Event Source</th>
                                                    <th>Image Preview</th>
                                                    </thead>
                                                    <tbody id="telemetryTblDetails"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Image Gallery Tab -->
                            <div class="tab-pane fade" id="tab-imageGallery" role="tabpanel" aria-labelledby="tab-imageGallery-label">
                                <div class="card-header">
                                    <h4 class="card-title w-100">
                                        <a class="d-block w-100">
                                            Images stored in Azure Blob Storage
                                        </a>
                                    </h4>
                                </div>
                                <div class="card-body">
                                    <div class="callout callout-info">
                                        <h6>Select row to preview image</h6>
                                    </div>
                                    <div class="info-box" style="margin-bottom:0.5em">
                                        <div class="info-box-content">
                                            <div class="row">
                                                <div class="col-sm-1" style="min-width:245px; width:fit-content">
                                                    <div id="imagePreviewDiv">
                                                        <img id="imagePreview" style="width:240px;height:240px; object-fit: contain"/>
                                                    </div>
                                                </div>
                                                <div class="col-sm-2" style="padding-left:0.5em">
                                                    <span class="info-box-text">File Name : <span class="info-box-text" id="imagePreviewName"></span></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="info-box">
                                        <div class="info-box-content">
                                            <div class="row" style="margin-bottom:0.5em">
                                                <div class="col-md-9">
                                                    <div class="form-group">
                                                        <label for="imageGalleryDeviceIdList" style="width:10em">Device ID Filter</label>
                                                        <select name="imageGalleryDeviceIdList" id="imageGalleryDeviceIdList" class="form-control custom-select" style="min-width:10em;width:30%"></select>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="div-Button-Right vertical-center" style="margin-top:0">
                                                        <button type="button" class="btn btn-success" id="refreshImageGalleryBtn">
                                                            <i class="fas fa-sync btn-fa"></i>Refresh
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row" style="overflow-x:hidden">
                                                <div class="jsgridDiv">
                                                    <div id="blobStorJsGrid" style="overflow-y:auto"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- History Tab -->
                            <div class="tab-pane fade" id="tab-cosmosDb" role="tabpanel" aria-labelledby="tab-cosmosDb-label">
                                <div class="card-header">
                                    <h4 class="card-title w-100">
                                        AI Inference History stored in Cosmos DB
                                    </h4>
                                </div>
                                <div class="card-body">
                                    <div class="callout callout-info">
                                        <h6>Select a result with image to preview image</h6>
                                    </div>
                                    <div class="info-box">
                                        <div class="info-box-content">
                                            <div class="row" style="margin-bottom:0.5em">
                                                <div class="d-flex justify-content-between" style="width:100%">
                                                    <div class="form-group">
                                                        <label for="cosmosDbDeviceIdList" style="width:max-content">Device ID Filter:&nbsp;</label>
                                                        <select name="cosmosDbDeviceIdList" id="cosmosDbDeviceIdList" class="form-control custom-select" style="min-width:10em;width:max-content"></select>
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="cosmosDbThreshold" style="width:max-content">Threshold:&nbsp;</label><span id="cosmosDbThreshold" style="min-width:4em"></span><span>%</span>
                                                        <span class="slider-blue">
                                                            <input type="range" class="slider" min="0" max="100" value="80" step="1" id="cosmosDbThresholdRange" style="min-width:13em;width:max-content">
                                                        </span>
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="cosmosDbRecordCount" style="width:max-content">Records:&nbsp;</label><span id="cosmosDbRecordCount" style="min-width:5em"></span><span>&nbsprecord(s)</span>
                                                        <span class="slider-blue">
                                                            <input type="range" class="slider" min="0" max="3000" value="100" step="1" id="cosmosDbRecordCountRange" style="min-width:13em;width:max-content">
                                                        </span>
                                                    </div>
                                                    <div class="div-Button-Right" style="margin-top:0">
                                                        <button type="button" class="btn btn-success" id="refreshCosmosDbBtn">
                                                            <i class="fas fa-sync btn-fa"></i>Refresh
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="jsgridDiv">
                                                    <div id="cosmosDbJsGrid"></div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="card-tools">
                                                    <div class="row" style="position:relative">

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- API Output Tab -->
                            <div class="tab-pane fade" id="tab-api-output" role="tabpanel" aria-labelledby="tab-apiOutput-label">
                                <div class="card card-primary">
                                    <div class="card-body">
                                        <div>
                                            <button type="button" class="btn btn-danger btn-fa-icon" id="clearApiOutputBtn">
                                                <i class="fas fa-trash-alt btn-fa"></i>Clear
                                            </button>
                                        </div>
                                        <div class="info-box-text">
                                            <label for="apiOutputLabel" class="label-right">API:</label>
                                            <span class="info-box-text" id='apiOutputLabel' style="display:contents"></span>
                                        </div>
                                        <div class="info-box-text">
                                            <textarea id="tabApiOutput" class="p-3" readonly rows="10" style="width:100%;height:100%;font-family:Consolas">
                                            </textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Other Tab -->
                            <div class="tab-pane fade" id="tab-other" role="tabpanel" aria-labelledby="tab-other-label">
                                <div class="card card-primary">
                                    <div class="card-header">
                                        <h4 class="card-title w-100">
                                            <a class="d-block w-100">
                                                Devices
                                            </a>
                                        </h4>
                                    </div>
                                    <div>
                                        <div class="card-body">
                                            <div class="info-box-text">
                                                <table id="deviceListTbl" class="table table-striped" style="max-height: 100%">
                                                    <thead>
                                                    <th>&nbsp;</th>
                                                    <th>Device ID</th>
                                                    <th>Status</th>
                                                    <th>Connection State</th>
                                                    </thead>
                                                    <tbody id="deviceListDetails"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button type="button" class="btn btn-success" id="getDevicesBtn">
                                                <i class="fas fa-sync btn-fa"></i>Refresh
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card card-primary">
                                    <div class="card-header">
                                        <h4 class="card-title w-100">
                                            <a class="d-block w-100">
                                                Models
                                            </a>
                                        </h4>
                                    </div>
                                    <div>
                                        <div class="card-body">
                                            <div class="info-box-text">
                                                <table id="modelListTbl" class="table table-striped" style="max-height: 100%">
                                                    <thead>
                                                    <th>&nbsp;</th>
                                                    <th>Model ID</th>
                                                    <th>Comment</th>
                                                    <th></th>
                                                    </thead>
                                                    <tbody id="modelListDetails"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button type="button" class="btn btn-success" id="getModelsBtn">
                                                <i class="fas fa-sync btn-fa"></i>Refresh
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card card-primary">
                                    <div class="card-header">
                                        <h4 class="card-title w-100">
                                            <a class="d-block w-100">
                                                Deployments
                                            </a>
                                        </h4>
                                    </div>
                                    <div>
                                        <div class="card-body">
                                            <div class="info-box-text">
                                                <table id="getDeployConfiguraionTbl" class="table table-striped" style="max-height: 100%">
                                                    <thead>
                                                    <th>&nbsp;</th>
                                                    <th>Config_ID</th>
                                                    <th>Comment</th>
                                                    <th></th>
                                                    </thead>
                                                    <tbody id="getDeloyConfigurationsListDetails"></tbody>
                                                </table>
                                            </div>
                                        </div>
                                        <div class="card-footer">
                                            <button type="button" class="btn btn-success" id="getDeployConfigurationsBtn">
                                                <i class="fas fa-sync btn-fa"></i>Refresh
                                            </button>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="deploymentHistoryModal" style="min-width:60vw">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Deployment History</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div class="card-body" style="padding:0 0 0 0.5em;min-height:450px">
                            <div class="jsgridDiv">
                                <div id="deploymentHistoryGrid" style="overflow-y:auto"></div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer justify-content-between">
                        <button type="button" class="btn btn-default" id="deploymentHistoryModalRefreshBtn">Refresh</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal" id="modalPhoto">
            <div class="modal-dialog" style="max-width:350px">
                <div class="modal-content">
                    <div class="modal-header bg-primary">
                        <h5 class="modal-title">Inference Result</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close" id="btnModalClose">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <canvas id="photoCanvas" height="320" width="320"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        var expiresOn = '';
        var currentProjectId = null;
        var currentModel = null;
        var currentDeviceId = null;
        var currentConfigId = null;
        var hubConnection;
        var cosmosDbThresholdSlider = document.getElementById("cosmosDbThresholdRange");
        var cosmosDbThreshold = document.getElementById("cosmosDbThreshold");
        var cosmosDbRecordCountSlider = document.getElementById("cosmosDbRecordCountRange");
        var cosmosDbRecordCount = document.getElementById("cosmosDbRecordCount");
        var cosmosDbRecordCountSliderHandler;
        var cosmosDbThresholdSliderHandler;

        cosmosDbThreshold.innerHTML = cosmosDbThresholdSlider.value;
        cosmosDbRecordCount.innerHTML = cosmosDbRecordCountSlider.value;

        cosmosDbThresholdSlider.onchange = function () {
            cosmosDbThreshold.innerHTML = this.value;
            $("#cosmosDbJsGrid").jsGrid("loadData");
        }

        cosmosDbThreshold.innerHTML = cosmosDbThresholdSlider.value;
        cosmosDbThresholdSlider.onchange = function () {
            //cosmosDbThreshold.innerHTML = this.value;
            $("#cosmosDbJsGrid").jsGrid("loadData");
        }

        cosmosDbRecordCount.innerHTML = cosmosDbRecordCountSlider.value;
        cosmosDbRecordCountSlider.onchange = function () {
            //cosmosDbRecordCount.innerHTML = this.value;
            $("#cosmosDbJsGrid").jsGrid("loadData");
        }

        function isItemSelected(selectElement, value) {
            if (document.getElementById(selectElement).selectedIndex == 0) {
                return false;
            } else if (document.getElementById(selectElement).selectedIndex == -1) {
                return false;
            } else if (value && document.getElementById(selectElement).value != value) {
                return false;
            }

            return true;
        }

        $(document).ready(function() { 

            if ('@ViewData["Name"]' != null && '@ViewData["Name"]'.length > 0)
            {
                console.debug("ViewData[Name] : " + '@(ViewData["Name"])');
                document.getElementById('userName').innerHTML = '@(ViewData["Name"])';
            }

            if ('@ViewData["PreferredName"]' != null && '@ViewData["PreferredName"]'.length > 0)
            {
                console.debug("ViewData[PreferredName] : " + '@(ViewData["PreferredName"])');
                document.getElementById('userDesc').innerHTML = '@(ViewData["PreferredName"])';
            }

            if ('@(ViewData["Token"])' != null && '@ViewData["Token"]'.length > 0)
            {
                console.debug("ViewData[Token] : " + '@(ViewData["Token"])');
                document.getElementById('taToken').value = '@(ViewData["Token"])';
                document.getElementById('taToken').dispatchEvent(new Event("change"));
            }

            if ('@(ViewData["ClientId"])' != null && '@ViewData["ClientId"]'.length > 0)
            {
                console.debug("ViewData[ClientId] : " + '@(ViewData["ClientId"])');
                document.getElementById('clientId').value = '@(ViewData["ClientId"])';
            }

            if ('@(ViewData["TokenExpiration"])' != null && '@ViewData["TokenExpiration"]'.length > 0)
            {
                console.debug("ViewData[TokenExpiration] : " + '@(ViewData["TokenExpiration"])');
                var expiration = parseInt('@(ViewData["TokenExpiration"])');
                var d = new Date(0);
                d.setUTCSeconds(expiration);
                document.getElementById('spanTokenExpire').innerHTML =  String(d);
            }
        });

        
        $(document).ready(function () {
            console.debug("document.Ready");

            if (document.getElementById('clientId').value == "") {
                document.getElementById('clientId').value = '@(ViewData["ClientId"])';
            }
            
            sonyApiInitializeMsal();

            hubConnection = new signalR.HubConnectionBuilder()
                .withUrl("telemetryHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            hubConnection.on('DeviceTelemetry', function (payload) {
                console.debug("DeviceTelemetry");
                var jsonData = JSON.parse(payload);
                addEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.data);
            });


            hubConnection.on('CosmosDb', function (payload) {
                var jsonData = JSON.parse(payload);
                addCosmosDbEvent(jsonData.eventId, jsonData.eventType, jsonData.deviceId, jsonData.dtDataSchema, jsonData.eventSource, jsonData.eventTime, jsonData.hasImage, jsonData.inferenceResults);
            });

            hubConnection.on('blobTrigger', function (payload) {
                // console.debug("blobTrigger ", payload);
            });


            hubConnection.start()
                .then(() => console.log('SignalR connected!'))
                .catch(console.error);
        })

        //
        // button clicks
        //
        $('#copyTokenBtn').click(function () {
            navigator.clipboard.writeText(document.getElementById('taToken').value);
        })

        $('#pasteTokenBtn').click(function () {
            navigator.clipboard.readText()
                .then(clipText => {
                    document.getElementById('taToken').value = clipText;
                    document.getElementById('taToken').dispatchEvent(new Event("change"));
                })
                .catch(err => {
                    console.log("Could not read clipboard", err);
                });
        })

        $('#loginBtn').click(function () {
            if ($('#loginForm').valid()) {
                toggleLoader(false);
                sonyApiInitializeMsal();
                getToken()
                    .then(() => {
                        console.log("Login End");
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            }
        })

        $('#logoutBtn').click(function () {
                toggleLoader(false);
                sonyApiLogout();
                toggleLoader(false);
        })

        $('#createBaseCustomVisionProjectBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if ($('#createBaseCustomVisionProjectForm').valid() == false) {
                return;
            }

            toggleLoader(false);
            CreateBaseCustomVisionProject()
                .then(() => {
                    // GetCustomVisionProjects("selectCustomVisionProjectList");
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#deleteCustomVisionProjectBtn').click(function (evt) {

            var projectList = document.getElementById('selectCustomVisionProjectList');

            //console.debug(`${evt.target.id}() ${evt.type} ${projectList[projectList.selectedIndex].text}`);

            if (projectList[projectList.selectedIndex].value != 0) {
                toggleLoader(false);
                DeleteProject(projectList[projectList.selectedIndex].text, 'deleteCustomVisionProjectBtnResult')
                    .then(() => {
                        console.log("Custom Vision Project Deleted");
                        CvGetProjects("selectCustomVisionProjectList", null);
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            }
        })

        $('#visitCustomVisionBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var projectList = document.getElementById('visitCustomVisionProjectList');
            if (projectList[projectList.selectedIndex].value != 0) {
                var url = "https://www.customvision.ai/projects/" + projectList[projectList.selectedIndex].value;
                window.open(url, "_blank");
            }
        })

        $('#clearApiOutputBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            document.getElementById('tabApiOutput').value = null;
        })

        $('#saveCustomVisionModelBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if ($('#saveCustomVisionModelForm').valid()) {

                var resultElementId = 'saveCustomVisionModelBtnResult';

                toggleLoader(false);

                SaveCustomVisionModel(resultElementId)
                    .then(() => {
                        console.log("Model Saved");
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            }
        })

        $('#convertModelBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            disableUiButtons(true);
            toggleLoader(false);
            ConvertModel()
                .then(function (conversion_id) {
                    if (conversion_id) {
                        console.log("Conversion Started : " + conversion_id);
                        document.getElementById('convertModelGetBaseModelStatusBtn').dispatchEvent(new Event("click"));
                    } else {
                        disableUiButtons(false);
                    }
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                    disableUiButtons(false);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#convertModelGetBaseModelStatusBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var modelIdList = 'convertModelModelIdList';

            var model_id = document.getElementById(modelIdList).selectedIndex == 0 ? null : document.getElementById(modelIdList).value;

            GetBaseModelStatus(model_id, "1")
                .then(function (project) {
                    var json = JSON.parse(project);
                    // dnremove
                    if (json.versions[0].stage == 'conversion' || json.versions[0].stage == 'publish') {

                        document.getElementById('convertModelGetBaseModelStatusConversionDiv').innerHTML = json.versions[0].conv_id;
                        document.getElementById('convertModelGetBaseModelStatusStageDiv').innerHTML = json.versions[0].stage;
                        document.getElementById('convertModelGetBaseModelStatusBtnResult').innerHTML = json.versions[0].result;

                        if (json.versions[0].result == "processing") {
                            // set timer
                            GetBaseModelStatusInterval(evt.target.id);
                        }
                        else if (json.versions[0].result == "completed") {
                            // cancel interval
                            GetBaseModelStatusInterval(null);
                            $('#convertModelBtn').prop('disabled', true);
                        }
                    }
                    else if (json.versions[0].stage == "before") {
                        //$('#convertModelBtn').prop('disabled', false);
                    }

                })
                .catch(function (err) {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                });
        })

        $('#publishModelBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            disableUiButtons(true);
            toggleLoader(false);
            PublishModel()
                .then(function (conversion_id) {
                    if (conversion_id) {
                        console.log("Conversion Started : " + conversion_id);
                        document.getElementById('publishModelGetBaseModelStatusBtn').dispatchEvent(new Event("click"));
                    }
                    else
                    {
                        disableUiButtons(false);
                    }
                })
                .catch(function (err) {
                    console.error(`Error : ${err.statusText}`);
                    disableUiButtons(false);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#publishModelGetBaseModelStatusBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var modelIdList = 'publishModelModelIdList';

            var model_id = document.getElementById(modelIdList).selectedIndex == 0 ? null : document.getElementById(modelIdList).value;

            GetBaseModelStatus(model_id, "1")
                .then(function (project) {
                    var json = JSON.parse(project);

                    if (json.versions[0].stage == "publish") {

                        document.getElementById('publishModelGetBaseModelStatusConversionIdDiv').innerHTML = json.versions[0].conv_id;
                        document.getElementById('publishModelGetBaseModelStatusStageDiv').innerHTML = json.versions[0].stage;
                        document.getElementById('publishModelGetBaseModelStatusBtnResult').innerHTML = json.versions[0].result;

                        if (json.versions[0].result == "processing") {
                            // set timer
                            GetBaseModelStatusInterval(evt.target.id);
                        }
                        else if (json.versions[0].result == "completed") {
                            // cancel interval
                            GetBaseModelStatusInterval(null);
                            $('#publishModelBtn').prop('disabled', true);
                        }
                    }
                    else if (json.versions[0].stage == "before") {
                        $('#publishModelBtn').prop('disabled', false);
                    }
                })
                .catch(function (err) {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                });
        })

        $('#createDeployConfigurationBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if ($('#createDeployConfigurationForm').valid() == false) {
                return;
            }

            console.debug("createDeployConfigurationBtn Click");

            CreateDeployConfiguration()
                .then(() => {
                    console.log("Deployment Created");
                    currentConfigId = document.getElementById("createDeployConfigurationConfigId").value;;

                })
                .catch(function (err) {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                });
        })

        $('#deployByConfiguratonBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            toggleLoader(false);
            await DeployByConfiguration()
                .then(() => {
                    console.log("Configuration Deployed");
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#createDeployConfigurationGetDeployConfigurationsBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetList = 'createDeployConfigurationGetDeployConfigurationsList';
            var currentDeployment = document.getElementById(targetList).value;
            toggleLoader(false);
            await GetDeployConfigurations('createDeployConfigurationGetDeployConfigurationsList', null)
                .then(() => {
                    console.log("Configuration Acquired");
                    console.debug(currentDeployment);
                    if (currentDeployment.length > 0 && !isItemSelected(targetList, currentDeployment)) {
                        setSelectOption(targetList, currentDeployment);
                    }
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#startUploadInferenceResultBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if ($('#startUploadInferenceResultForm').valid()) {
                toggleLoader(false);
                await StartUploadInferenceResult()
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            }
        })

        $('#stopUploadInferenceResultBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            await StopUploadInferenceResult()
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#startUploadRetrainingDataBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if ($('#startUploadRetrainingDataForm').valid()) {
                toggleLoader(false);
                await StartUploadRetrainingData()
                        .catch(err => {
                            console.error(`Error : ${err.statusText}`);
                        })
                        .finally(() => {
                            toggleLoader(true);
                        });
            }
        })

        $('#stopUploadRetrainingDataBtn').click(async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            await StopUploadRetrainingData()
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
        })

        $('#clearTelemetryTableBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            $("#telemetryTbl").find("tr:gt(0)").remove();
            $("#telemetryTbl").hide();
        })

        $('#clearApiOutputBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        $('#getDevicesBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            RefreshDevicesListTable()
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#getModelsBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            RefreshModelsListTable()
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#getDeployConfigurationsBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            RefreshDeployConfiguraions()
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#refreshImageGalleryBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            $("#blobStorJsGrid").jsGrid("loadData");
        })

        $('#refreshCosmosDbBtn').click(function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            $("#cosmosDbJsGrid").jsGrid("loadData");
        })

        //
        //form validations
        //
        $('#loginForm').validate({
            rules: {
                clientId: {
                    required: true,
                    minlength: 35
                },
            },
            messages: {
                clientId: {
                    required: "Please enter a Client ID",
                    minlength: "Please enter a valid Client ID"
                }
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#createBaseCustomVisionProjectForm').validate({
            rules: {
                createBaseCustomVisionProjectName: {
                    required: true,
                    maxlength: 100
                },
                createBaseCustomVisionProjectComment: {
                    required: false,
                    maxlength: 100
                },
            },
            messages: {
                createBaseCustomVisionProjectName: {
                    required: "Enter project name of Custom vision. Within 100 characters.",
                    maxlength: "Project Name must be up to 100 characters"
                },
                createBaseCustomVisionProjectComment: {
                    maxlength: "Project Comment must be up to 100 characters"
                },

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#saveCustomVisionModelForm').validate({
            rules: {
                saveCustomVisionModelProjectNameList: {
                    required: true
                },
                saveCustomVisionModelProjectModelId: {
                    required: false,
                    maxlength: 100

                },
                saveCustomVisionModelInitialVersionNumber: {
                    required: false,
                    min: 1,
                    max: 100
                },
                saveCustomVisionModelFunctionality: {
                    required: false,
                    maxlength: 100
                },
                saveCustomVisionModelVendorName: {
                    required: false,
                    maxlength: 100
                },
                saveCustomVisionModelComment: {
                    required: false,
                    maxlength: 100
                },
            },
            messages: {
                saveCustomVisionModelProjectNameList: {
                    required: "Select project name of Custom vision. Within 100 characters.",
                },
                saveCustomVisionModelProjectModelId: {
                    maxlength: "Model ID must be up to 100 characters"
                },
                saveCustomVisionModelInitialVersionNumber: {
                    min: "Initial version must be > 1",
                    max: "Initial version must be <= 100"
                },

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#createDeployConfigurationForm').validate({
            rules: {
                createDeployConfigurationConfigId: {
                    required: true,
                    maxlength: 20
                },
                createDeployConfigurationSensorLoaderVersionNumber: {
                    required: true
                },
                createDeployConfigurationSensorVersionNumber: {
                    required: true
                },
                createDeployConfigurationModelId: {
                    required: true
                },
                createDeployConfigurationApFwVersionNumber: {
                    required: true
                },
                createDeployConfigurationComment: {
                    required: false,
                    maxlength: 100
                },
                createDeployConfigurationComment: {
                    required: false,
                    maxlength: 100
                },
                createDeployConfigurationDeviceTypeList: {
                    required: false
                },
                createDeployConfigurationModelVersionNumber: {
                    required: false
                },
                createDeployConfigurationColorMatrixModelList: {
                    required: false
                },
                createDeployConfigurationColorMatrixFileName: {
                    required: false
                },
                createDeployConfigurationGammaModeList: {
                    required: false
                },
                createDeployConfigurationGammaFileName: {
                    required: false
                },
                createDeployConfigurationLscModeList: {
                    required: false
                },
                createDeployConfigurationLscFileName: {
                    required: false
                },
                createDeployConfigurationPrewbModeList: {
                    required: false
                },
                createDeployConfigurationDewarpFileName: {
                    required: false
                },
                createDeployConfigurationDewarpModeList: {
                    required: false
                },
                createDeployConfigurationDewarpFileName: {
                    required: false
                }
            },
            messages: {
                createDeployConfigurationConfigId: {
                    required: "Enter configID up to 20 characters.",
                    maxlength: "configID must be up to 20 characters"
                },
                createDeployConfigurationSensorLoaderVersionNumber: {
                    required: "Select SensorLoader version.",
                },
                createDeployConfigurationSensorVersionNumber: {
                    required: "Select Sensor version.",
                },
                createDeployConfigurationModelId: {
                    required: "Select Model ID.",
                },
                createDeployConfigurationApFwVersionNumber: {
                    required: "Select ApFw version.",
                },
                createDeployConfigurationSensorLoaderVersionNumber: {
                    required: "Select SensorLoader version number.",
                },

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#deployByConfiguraionForm').validate({
            rules: {
                deployByConfiguraionFormConfigIdList: {
                    required: true
                },
                deployByConfiguraionDeviceIdList: {
                    required: true
                },
                deployByConfiguraionComment: {
                    required: false
                },
                deployByConfiguraionReplaceModelIdList: {
                    required: false
                },
            },
            messages: {
                deployByConfiguraionFormConfigIdList: {
                    required: "Select ConfigID from thelist",
                },
                deployByConfiguraionDeviceIdList: {
                    required: "Select Device ID from the list."
                },

            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#startUploadInferenceResultForm').validate({
            rules: {
                startUploadInferenceResultDeviceIdList: {
                    required: true
                },
                startUploadInferenceResultFrequencyOfInferences: {
                    required: false,
                    min: 1,
                    max: 2592000
                },
                startUploadInferenceResultMaxDetectionsPerFrame: {
                    required: false,
                    min: 1,
                    max: 64
                },
                startUploadInferenceResultCropHOffset: {
                    required: false,
                    min: 0,
                    max: 4056
                },
                startUploadInferenceResultCropVOffset: {
                    required: false,
                    min: 0,
                    max: 3040
                },
                startUploadInferenceResultCropHSize: {
                    required: false,
                    min: 0,
                    max: 4056
                },
                startUploadInferenceResultCropVSize: {
                    required: false,
                    min: 0,
                    max: 3040
                },
                startUploadInferenceResultNumberOfInferencesPerMessage: {
                    required: false,
                    min: 1,
                    max: 100
                },
                startUploadInferenceResultModelIdList: {
                    required: false
                },
            },
            messages: {
                startUploadInferenceResultDeviceIdList: {
                    required: "Select Device ID"
                },
                startUploadInferenceResultFrequencyOfInferences: {
                    min: "Frequency of Inference must be > 1",
                    max: "Frequency of Inference must be < 2,592,000"
                },
                startUploadInferenceResultMaxDetectionsPerFrame: {
                    min: "No. of Objects included in 1 frame must be 1 or more",
                    max: "No. of Objects included in 1 frame must be less than or equal to 64"
                },
                startUploadInferenceResultCropHOffset: {
                    min: "Hoffset for Image crop must be 0 or more",
                    max: "Hoffset for Image crop must be less than or equal to 4,056"
                },
                startUploadInferenceResultCropVOffset: {
                    min: "Voffset for Image crop must be 0 or more",
                    max: "Voffset for Image crop must be less than or equal to 3,040"
                },
                startUploadInferenceResultCropHSize: {
                    min: "Hsize for Image crop must be 0 or more",
                    max: "Hsize for Image crop must be less than or equal to 4,056"
                },
                startUploadInferenceResultCropVSize: {
                    min: "Vsize for Image crop must be 0 or more",
                    max: "Vsize for Image crop must be less than or equal to 4,056"
                },
                startUploadInferenceResultNumberOfInferencesPerMessage: {
                    min: "Number of inference results to include in one message must be 1 or more",
                    max: "Number of inference results to include in one message must be less than or equal to 100"
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#stopUploadInferenceResultForm').validate({
            rules: {
                stopUploadInferenceResultDeviceIdList: {
                    required: true,
                },
            },
            messages: {
                startUploadInferenceResultDeviceIdList: {
                    required: "Select Device ID",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#startUploadRetrainingDataForm').validate({
            rules: {
                startUploadRetrainingDataDeviceIdList: {
                    required: true
                },
                startUploadRetrainingDataModeList: {
                    required: false
                },
                startUploadRetrainingDataCropHOffset: {
                    required: false,
                    min: 0,
                    max: 4056
                },
                startUploadRetrainingDataCropVOffset: {
                    required: false,
                    min: 0,
                    max: 3040
                },
                startUploadRetrainingDataCropHSize: {
                    required: false,
                    min: 0,
                    max: 4056
                },
                startUploadRetrainingDataCropVSize: {
                    required: false,
                    min: 0,
                    max: 3040
                },
                startUploadRetrainingDataNumImages: {
                    required: false,
                    min: 1,
                    max: 10000
                },
                startUploadRetrainingDataFrequencyOfImages: {
                    required: false,
                    min: 1,
                    max: 259200
                },
                startUploadRetrainingDataMaxDetectionPerFrame: {
                    required: false,
                    min: 1,
                    max: 100
                },
                startUploadRetrainingDataNumInferencePerMessage: {
                    required: false,
                    min: 1,
                    max: 100
                },
            },
            messages: {
                startUploadRetrainingDataDeviceIdList: {
                    required: "Select Device ID"
                },
                startUploadRetrainingDataCropHOffset: {
                    min: "Hoffset for Image crop must be 0 or more",
                    max: "Hoffset for Image crop must be less than or equal to 4,056"
                },
                startUploadRetrainingDataCropVOffset: {
                    min: "Voffset for Image crop must be 0 or more",
                    max: "Voffset for Image crop must be less than or equal to 3,040"
                },
                startUploadRetrainingDataCropHSize: {
                    min: "Hsize for Image crop must be 0 or more",
                    max: "Hsize for Image crop must be less than or equal to 4,056"
                },
                startUploadRetrainingDataCropVSize: {
                    min: "Vsize for Image crop must be 0 or more",
                    max: "Vsize for Image crop must be less than or equal to 4,056"
                },
                startUploadRetrainingDataNumImages: {
                    min: "Number of images to be fetched(Input Tensor) must be 0 or more",
                    max: "Number of images to be fetched(Input Tensor) must be less than or equal to 10,000"
                },
                startUploadRetrainingDataFrequencyOfImages: {
                    min: "Frequency of fetching the images (Input Tensor) must be 1 or more",
                    max: "Frequency of fetching the images (Input Tensor)must be less than or equal to 2,592,000"
                },
                startUploadRetrainingDataMaxDetectionPerFrame: {
                    min: "No. of Objects included in 1 frame  must be 1 or more",
                    max: "No. of Objects included in 1 frame  must be less than or equal to 64"
                },
                startUploadRetrainingDataNumInferencePerMessage: {
                    min: "Number of inference results to include in one message (Output Tensor) must be 0 or more",
                    max: "Number of inference results to include in one message (Output Tensor) must be less than or equal to 10,000"
                }
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });

        $('#stopUploadRetrainingDataForm').validate({
            rules: {
                stopUploadInferenceResultDeviceIdList: {
                    required: true,
                },
            },
            messages: {
                stopUploadInferenceResultDeviceIdList: {
                    required: "Select Device ID",
                },
            },
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);
            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            }
        });
        //
        // Accordion
        //

        $('#accordionSetup').on('show.bs.collapse', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        $('#accordionSetup').on('hide.bs.collapse', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        $('#accordionCreateBaseCustomVisionProject').on('show.bs.collapse', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListName = 'selectCustomVisionProjectList';
            var resultElementId = 'deleteCustomVisionProjectBtnResult';

            toggleLoader(false);
            CvGetProjects(targetListName, resultElementId)
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(false);
                });
        })

        $('#accordionVisitCustomVision').on('show.bs.collapse', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListName = 'visitCustomVisionProjectList';

            toggleLoader(false);
            CvGetProjects(targetListName, null)
                .then(() => {
                    if (!isItemSelected(targetListName, currentProjectId) && currentProjectId) {
                        setSelectOption(targetListName, currentProjectId);
                    }
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(false);
                });
        })

        $('#accordionSaveCustomVisionModel').on('show.bs.collapse', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);

            var targetListName = 'saveCustomVisionModelProjectNameList';
            var resultElementId = 'saveCustomVisionModelBtnResult';

            toggleLoader(false);
            CvGetProjects(targetListName, resultElementId)
                .then(() => {
                    if (!isItemSelected(targetListName, currentProjectId) && currentProjectId) {
                        setSelectOption(targetListName, currentProjectId);
                    }
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#accordionConvertModel').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            try {
                var targetListName = 'convertModelModelIdList';
                toggleLoader(false);

                await GetAllModels(targetListName, false, 'convertModelBtnResult')
                    .then((ret) => {
                        if (ret) {
                            if (!isItemSelected(targetListName, currentModel) && currentModel) {
                                setSelectOption(targetListName, currentModel);
                            }
                        } else {
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });

                await GetDevices("convertModelDeviceIdList", true, true, 'Select Device', '', 'convertModelBtnResult')
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });

            } finally {
                toggleLoader(true);
            }
        })

        $('#accordionPublishModel').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListName = 'publishModelModelIdList';

            try {
                toggleLoader(false);

                await GetAllModels(targetListName, false, 'publishModelBtnResult')
                    .then((ret) => {
                        if (ret) {
                            if (!isItemSelected(targetListName, currentModel) && currentModel) {
                                setSelectOption(targetListName, currentModel);
                            }
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });

                await GetDevices("publishModelDeviceIdList", true, true, 'Select Device', '', 'publishModelBtnResult')
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });

            } finally {
                toggleLoader(true);
            }
        })

        $('#accordionCreatePeployConfiguration').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            try {
                toggleLoader(false);
                var resultElementId = 'createDeployConfigurationResult';

                var targetListName = 'createDeployConfigurationModelId';
                ret = await GetFirmwares('02', null, "createDeployConfigurationSensorLoaderVersionNumber", resultElementId)
                                .catch(err => {
                                    console.error(`Error : ${err.statusText}`);
                                });

                if (!ret) {
                    return;
                }
                ret = await GetFirmwares('01', null, "createDeployConfigurationSensorVersionNumber", resultElementId)
                                .catch(err => {
                                    console.error(`Error : ${err.statusText}`);
                                });
                if (!ret) {
                    return;
                }
                ret = await GetFirmwares('00', null, "createDeployConfigurationApFwVersionNumber", resultElementId)
                                .catch(err => {
                                    console.error(`Error : ${err.statusText}`);
                                });
                if (!ret) {
                    return;
                }

                ret = await GetDeployConfigurations("createDeployConfigurationGetDeployConfigurationsList", resultElementId)

                if (!ret) {
                    return;
                }

                GetAllModels(targetListName, false, null)
                    .then((ret) => {
                        if (ret && !isItemSelected(targetListName, currentModel) && currentModel) {
                            setSelectOption(targetListName, currentModel);
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });
            } finally {
                toggleLoader(true);
            }
        })

        $('#accordionDeployByConfiguration').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListName = 'deployByConfiguraionFormConfigIdList';

            try {
                toggleLoader(false);

                await GetDeployConfigurations('deployByConfiguraionFormConfigIdList', 'deployByConfiguratonBtnResult')
                    .then(async function (ret) {
                        console.debug(ret);
                        if (ret == true)
                        {
                            await GetDevices('deployByConfiguraionDeviceIdList', true, false, 'Select Device', '', 'deployByConfiguratonBtnResult')
                                .then((ret) => {})
                                .catch(() => {
                                })
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });
            } finally {
                toggleLoader(true);
            }
        })

        $('#accordionStartUploadInferenceResult').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            try {
                toggleLoader(false);

                var targetListName = 'startUploadInferenceResultDeviceIdList';

                await GetDevices(targetListName, true, false, 'Select Device', '', 'btnStartUploadInferenceResultResult')
                    .then((ret) => {
                        if (ret) {
                            if (currentDeviceId) {
                                setSelectOption(targetListName, currentDeviceId);
                            }
                        } else {
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });
            } finally {
                toggleLoader(true);
            }
        })

        $('#accordionStartUploadRetrainingData').on('show.bs.collapse', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListName = 'startUploadRetrainingDataModelIdList';

            try {
                toggleLoader(false);

                var targetDeviceListName = 'startUploadRetrainingDataDeviceIdList';
                await GetDevices(targetDeviceListName, true, false, 'Select Device', '', 'startUploadRetrainingDataBtnResult')
                    .then((ret) => {
                        if (ret) {
                            if (!isItemSelected(targetDeviceListName, currentDeviceId) && currentDeviceId) {
                                setSelectOption(targetDeviceListName, currentDeviceId);
                            }
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    });
            } finally {
                toggleLoader(true);
            }
        })

        //
        // modal
        //

        $('#deploymentHistoryModal').on('show.bs.modal', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            $("#deploymentHistoryGrid").jsGrid("loadData");
        })

        //
        // Tab
        //
        $('#tab-setup-label').on('show.bs.tab', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        $('#tab-telemetry-label').on('show.bs.tab', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetDeviceListName = 'telemetryTableFilterList';
            toggleLoader(false);
            await GetDevices(targetDeviceListName, true, true, 'All Devices', '*', null)
                .then((ret) => {
                    if (ret) {
                        if (!isItemSelected(targetDeviceListName, currentDeviceId) && currentDeviceId) {
                            setSelectOption(targetDeviceListName, currentDeviceId);
                        }
                    }
                })
                .catch(err => {
                    console.error(`Error : ${err.statusText}`);
                })
                .finally(() => {
                    toggleLoader(true);
                });
        })

        $('#tab-imageGallery-label').on('show.bs.tab', async function (evt) {
            console.log(evt.target.id + "() " + evt.type);
            var targetDeviceListName = 'imageGalleryDeviceIdList';
            toggleLoader(false);
            await GetDevices(targetDeviceListName, true, true, 'All Devices', '*', null)
                    .then((ret) => {
                        if (ret == true)
                        {
                            $("#blobStorJsGrid").jsGrid("loadData");
                        }
                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });      
        })

        $('#tab-cosmosDb-label').on('show.bs.tab', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            toggleLoader(false);
            var targetDeviceListName = 'cosmosDbDeviceIdList';

            cosmosDbRecordCountSlider.addEventListener("input", function cosmosDbRecordCountSliderHandler(evt) {
                var count = parseInt(evt.target.value);

                if (count == 0)
                {
                    cosmosDbRecordCount.innerHTML = "0 (All)"
                }
                else
                {
                    cosmosDbRecordCount.innerHTML = evt.target.value;
                }
            })

            cosmosDbThresholdSlider.addEventListener("input", function cosmosDbThresholdSliderHandler(evt) {
                var count = parseInt(evt.target.value);
                cosmosDbThreshold.innerHTML = evt.target.value;
            })

            await GetDevices(targetDeviceListName, true, true, 'All Devices', '*', null)
                .then((ret) => {
                    if (ret == true)
                    {
                        $("#cosmosDbJsGrid").jsGrid("loadData");
                    }
                })
                .finally(() => {
                    toggleLoader(true);
                })   
        })

        $('#tab-cosmosDb-label').on('hide.bs.tab', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            cosmosDbRecordCountSlider.removeEventListener("input", cosmosDbRecordCountSliderHandler);
            cosmosDbThresholdSlider.removeEventListener("input", cosmosDbThresholdSliderHandler);
        })

        $('#tab-apiOutput-label').on('show.bs.tab', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        $('#tab-other-label').on('show.bs.tab', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
        })

        //
        // Change event
        //
        $('#taToken').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            if (document.getElementById('taToken').value.length > 0) {
                PostToken(document.getElementById('taToken').value);
                $('#copyTokenBtn').prop('disabled', false);
            } else {
                $('#copyTokenBtn').prop('disabled', false);
            }
        })

        $('#clientId').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            console.debug("Client ID : " + document.getElementById('clientId').value);
            if (document.getElementById('clientId').value.length > 0) {
                SetClientId(document.getElementById('clientId').value);
                sonyApiInitializeMsal();
            }
        })

        //
        // List Selected
        //

        $('#selectCustomVisionProjectList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListId = evt.target.id;
            var projectList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentProjectId = projectList[projectList.selectedIndex].value;
                $('#deleteCustomVisionProjectBtn').prop('disabled', false);
            } else {
                currentProjectId = null;
                $('#deleteCustomVisionProjectBtn').prop('disabled', true);

            }
        })

        $('#visitCustomVisionProjectList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListId = evt.target.id;
            var projectList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentProjectId = projectList[projectList.selectedIndex].value;
                $('#visitCustomVisionBtn').prop('disabled', false);
            } else {
                currentProjectId = null;
                $('#visitCustomVisionBtn').prop('disabled', true);
            }
        })

        $('#saveCustomVisionModelProjectNameList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListId = evt.target.id;
            var projectList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentModel = projectList[projectList.selectedIndex].text;
                $('#saveCustomVisionModelBtn').prop('disabled', false);
            } else {
                currentModel = '';
                $('#saveCustomVisionModelBtn').prop('disabled', true);
            }
        })


        $('#convertModelModelIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListId = evt.target.id;
            var modelList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                if (document.getElementById('saveCustomVisionModelProjectModelId').value.length == 0) {
                    document.getElementById('saveCustomVisionModelProjectModelId').value = modelList[modelList.selectedIndex].value;
                }

                currentModel = modelList[modelList.selectedIndex].text;
                $('#convertModelBtn').prop('disabled', false);
                $('#convertModelGetBaseModelStatusBtn').prop('disabled', false);
                document.getElementById('convertModelGetBaseModelStatusBtn').dispatchEvent(new Event("click"));
            } else {
                currentModel = '';
                $('#convertModelBtn').prop('disabled', true);
                $('#convertModelGetBaseModelStatusBtn').prop('disabled', true);
            }
        })

        $('#publishModelModelIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var targetListId = evt.target.id;
            var modelList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentModel = modelList[modelList.selectedIndex].text;
                $('#publishModelBtn').prop('disabled', false);
                $('#publishModelGetBaseModelStatusBtn').prop('disabled', false);
                document.getElementById('publishModelGetBaseModelStatusBtn').dispatchEvent(new Event("click"));

            } else {
                currentModel = '';
                $('#publishModelBtn').prop('disabled', true);
                $('#publishModelGetBaseModelStatusBtn').prop('disabled', true);
            }
        })

        $('#createDeployConfigurationConfigId').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckCreateDeployConfigurationInputs();
        })

        $('#createDeployConfigurationSensorLoaderVersionNumber').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckCreateDeployConfigurationInputs();
        })

        $('#createDeployConfigurationSensorVersionNumber').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckCreateDeployConfigurationInputs();
        })

        $('#createDeployConfigurationModelId').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckCreateDeployConfigurationInputs();
        })

        $('#createDeployConfigurationApFwVersionNumber').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckCreateDeployConfigurationInputs();
        })

        $('#createDeployConfigurationGetDeployConfigurationsList').on('change', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);

            var currentDeployment = document.getElementById(evt.target.id).value;

            if (currentDeployment.length > 0)
            {
                toggleLoader(false);
                await GetDeployConfigurations(null, null)
                    .then((deployments) => {
                        var json = JSON.parse(deployments);
                        var config_id = document.getElementById(evt.target.id).selectedIndex == 0 ? null : document.getElementById(evt.target.id).value;
                        console.debug(typeof json);
                        json.deploy_configurations.forEach(function(deployment) {
                            if (deployment.config_id == config_id)
                            {
                                document.getElementById('createDeployConfigurationConfigId').value = deployment.config_id;
                                document.getElementById('createDeployConfigurationSensorLoaderVersionNumber').value = deployment.firmware.sensor_loader_version_number;
                                document.getElementById('createDeployConfigurationSensorVersionNumber').value = deployment.firmware.sensor_version_number;
                                document.getElementById('createDeployConfigurationModelId').value = deployment.model.model_id;
                                document.getElementById('createDeployConfigurationApFwVersionNumber').value = deployment.firmware.apfw_version_number;
                                document.getElementById('createDeployConfigurationComment').value = deployment.config_comment;
                                document.getElementById('createDeployConfigurationDeviceTypeList').value = deployment.device_type;
                                document.getElementById('createDeployConfigurationModelVersionNumber').value = deployment.model.model_version_number;

                                document.getElementById('createDeployConfigurationColorMatrixModelList').value = deployment.custom_setting.color_matrix_mode;
                                if (deployment.custom_setting.color_matrix_file_name.length > 0)
                                {
                                    document.getElementById('createDeployConfigurationColorMatrixFileName').value = deployment.custom_setting.color_matrix_file_name;
                                }

                                document.getElementById('createDeployConfigurationGammaModeList').value = deployment.custom_setting.gamma_mode;
                                if (deployment.custom_setting.gamma_file_name.length > 0)
                                {
                                    document.getElementById('createDeployConfigurationGammaFileName').value = deployment.custom_setting.gamma_file_name;
                                }

                                document.getElementById('createDeployConfigurationLscModeList').value = deployment.custom_setting.lsc_mode;
                                if (deployment.custom_setting.lsc_file_name.length > 0)
                                {
                                    document.getElementById('createDeployConfigurationLscFileName').value = deployment.custom_setting.lsc_file_name;
                                }

                                document.getElementById('createDeployConfigurationPrewbModeList').value = deployment.custom_setting.prewb_mode;
                                if (deployment.custom_setting.prewb_file_name.length > 0)
                                {
                                    document.getElementById('createDeployConfigurationPrewbFileName').value = deployment.custom_setting.prewb_file_name;
                                }

                                document.getElementById('createDeployConfigurationDewarpModeList').value = deployment.custom_setting.dewarp_mode;
                                if (deployment.custom_setting.dewarp_file_name.length > 0)
                                {
                                    document.getElementById('createDeployConfigurationDewarpFileName').value = deployment.custom_setting.dewarp_file_name;
                                }
                            }

                        });

                    })
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            }
            else
            {
                ResetDeploymentUi();
            }
        })
        
        $('#deployByConfiguraionFormConfigIdList').on('change', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckDeployByConfigurationInputs();
        })

        $('#deployByConfiguraionDeviceIdList').on('change', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            CheckDeployByConfigurationInputs();

            var targetListId = evt.target.id;

            if (isItemSelected(targetListId, null)) {
                $('#deployByConfiguratonHistoryBtn').prop('disabled', false);
                currentDeviceId = document.getElementById(targetListId).value;
                toggleLoader(false);
                await GetModelForDevice('deployByConfiguraionReplaceModelIdList', currentDeviceId, 'deployByConfiguratonBtnResult')
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });

            } else {
                currentDeviceId = null;
            }
        })

        $('#startUploadInferenceResultDeviceIdList').on('change', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var deviceList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                $('#startUploadInferenceResultBtn').prop('disabled', false);
                $('#stopUploadInferenceResultBtn').prop('disabled', false);
                currentDeviceId = deviceList[deviceList.selectedIndex].value;

                toggleLoader(false);
                await GetModelForDevice('startUploadInferenceResultModelIdList', currentDeviceId, 'btnStartUploadInferenceResultResult')
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
            } else {
                $('#startUploadInferenceResultBtn').prop('disabled', true);
                $('#stopUploadInferenceResultBtn').prop('disabled', true);
                currentDeviceId = null;
            }
        })

        $('#startUploadInferenceResultModelIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var modelList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentModel = modelList[modelList.selectedIndex].value;
            } else {
                currentModel = null;
            }
        })

        $('#startUploadRetrainingDataDeviceIdList').on('change', async function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var deviceList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                $('#startUploadRetrainingDataBtn').prop('disabled', false);
                $('#stopUploadRetrainingDataBtn').prop('disabled', false);
                currentDeviceId = deviceList[deviceList.selectedIndex].value;
                toggleLoader(false);
                await GetModelForDevice('startUploadRetrainingDataModelIdList', currentDeviceId, 'startUploadRetrainingDataBtnResult')
                    .catch(err => {
                        console.error(`Error : ${err.statusText}`);
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });

            } else {
                $('#startUploadRetrainingDataBtn').prop('disabled', true);
                $('#stopUploadRetrainingDataBtn').prop('disabled', true);
                currentDeviceId = null;
            }
        })

        $('#startUploadRetrainingDataModelIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var modelList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                currentModel = modelList[modelList.selectedIndex].value;
            } else {
                currentModel = null;
            }
        })

        $('#telemetryTableFilterList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            telemetryTableFilter2(evt.target.id);
        })

        $('#imageGalleryDeviceIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var deviceList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                blobSearchDeviceId = document.getElementById(targetListId).value;
                $("#blobStorJsGrid").jsGrid("search", {DeviceId: blobSearchDeviceId});
            } else {
            }
        })

        $('#cosmosDbDeviceIdList').on('change', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var targetListId = evt.target.id;
            var deviceList = document.getElementById(targetListId);

            if (isItemSelected(targetListId, null)) {
                cosmosDbSearchDeviceId = document.getElementById(targetListId).value;
                $("#cosmosDbJsGrid").jsGrid("search", {Device_ID: cosmosDbSearchDeviceId});
            } else {
            }
        })

        $('#createBaseCustomVisionProjectName').on('input', function (evt) {
            //console.debug(evt.target.id + "() " + evt.type);
            var inputField = document.getElementById('createBaseCustomVisionProjectName');

            if (inputField.value.length > 0) {
                $('#createBaseCustomVisionProjectBtn').prop('disabled', false);
            } else {
                $('#createBaseCustomVisionProjectBtn').prop('disabled', true);
            }
        })

        function toggleTableDetail(item) {

            var expanded = $(item).closest('.accordian-toggle').attr('aria-expanded');

            console.log("Expanded " + expanded);
            if (expanded == 'false' || expanded == undefined) {
                $(item).removeClass('fa-angle-double-down');
                $(item).addClass('fa-angle-double-up');
            } else {
                $(item).removeClass('fa-angle-double-up');
                $(item).addClass('fa-angle-double-down');
            }
        }

        async function deleteModel(item) {
            var modelName = item.attributes.getNamedItem('targetmodel').nodeValue;
            console.log("delete Model " + modelName);

            toggleLoader(false);
            await DeleteModel(modelName)
                    .then(() => {
                        document.getElementById('getModelsBtn').dispatchEvent(new Event("click"));
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
        }

        async function deleteDeloyConfiguraions(item) {
            var config_id = item.attributes.getNamedItem('target_config_id').nodeValue;
            console.log("delete Deploy Configuration " + config_id);

            toggleLoader(false);
            await DeleteDeployConfiguration(config_id)
                    .then(() => {
                        document.getElementById('getDeployConfigurationsBtn').dispatchEvent(new Event("click"));
                    })
                    .finally(() => {
                        toggleLoader(true);
                    });
        }

        function disableUiButtons(disable) {
            $("#convertModelBtn").prop('disabled', disable);
            $("#publishModelBtn").prop('disabled', disable);
            $("#createDeployConfigurationBtn").prop('disabled', disable);
            $("#createDeployConfigurationGetDeployConfigurationsBtn").prop('disabled', disable);
            $("#deployByConfiguratonHistoryBtn").prop('disabled', disable);
            $("#deployByConfiguratonBtn").prop('disabled', disable);
        }

        $("#btnModalClose").on("click", function (evt) {
            var modal = document.getElementById("modalPhoto");
            var canvas = document.getElementById("photoCanvas");
            var ctx = canvas.getContext('2d');
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            modal.style.display = "none";
        });

        $("#deploymentHistoryModalRefreshBtn").on("click", function (evt) {
            $("#deploymentHistoryGrid").jsGrid("loadData");
        });

        function ResetDeploymentUi() {
            document.getElementById('createDeployConfigurationConfigId').value = '';
            document.getElementById('createDeployConfigurationSensorLoaderVersionNumber').value = '';
            document.getElementById('createDeployConfigurationSensorVersionNumber').value = '';
            document.getElementById('createDeployConfigurationModelId').value = '';
            document.getElementById('createDeployConfigurationApFwVersionNumber').value = '';
            document.getElementById('createDeployConfigurationComment').value = '';
            document.getElementById('createDeployConfigurationDeviceTypeList').value = '';
            document.getElementById('createDeployConfigurationModelVersionNumber').value = '';

            document.getElementById('createDeployConfigurationColorMatrixModelList').value = '';
            document.getElementById('createDeployConfigurationColorMatrixFileName').value = '';
            document.getElementById('createDeployConfigurationGammaModeList').value = '';
            document.getElementById('createDeployConfigurationGammaFileName').value = '';
            document.getElementById('createDeployConfigurationLscModeList').value = '';
            document.getElementById('createDeployConfigurationLscFileName').value = '';
            document.getElementById('createDeployConfigurationPrewbModeList').value = '';
            document.getElementById('createDeployConfigurationPrewbFileName').value = '';
            document.getElementById('createDeployConfigurationDewarpModeList').value = '';
            document.getElementById('createDeployConfigurationDewarpFileName').value = '';
        }
    </script>

    <script id="telemetry-template" type="text/x-handlebars-template">
        <tr>
            <td data-toggle="collapse" data-target="#event-{{eventId}}" class="accordian-toggle" style="width:1em">
                <button class="btn btn-primary btn-fa-icon btn-icon">
                    <i class="fas fa-angle-double-down" onclick="toggleTableDetail(this)" data-targetId="#event-{{eventId}}"></i>
                </button>
            </td>
            <td style="width:auto">{{eventTime}}</td>
            <td style="width:auto">{{eventDeviceId}}</td>
            <td style="width:auto">{{eventModelId}}</td>
            <td style="width:auto">{{eventSource}}</td>
            <td style="width:auto">{{eventType}}</td>
            <td style="width:1em">
                <button class="btn btn-primary btn-fa-icon" id="btn-{{eventId}}" disabled>
                    <i class="fas fa-eye" onclick="viewPhoto(this)" eventId="{{eventId}}"></i>
                </button>
            </td>
        </tr>
        <tr class="hiddenRow collapse" id="event-{{eventId}}">
            <td colspan="12">
                <div class="accordian-body">
                    <pre id="pre-{{eventId}}"><code class="nohighlight">{{eventData}}</code></pre>
                </div>
            </td>
        </tr>
    </script>

    <script id="cosmosdb-template" type="text/x-handlebars-template">
        <tr>
            <td data-toggle="collapse" data-target="#event-{{eventId}}" class="accordian-toggle" style="width:1em">
                <button class="btn btn-primary btn-fa-icon btn-icon">
                    <i class="fas fa-angle-double-down" onclick="toggleTableDetail(this)" data-targetId="#event-{{eventId}}"></i>
                </button>
            </td>
            <td>{{eventTime}}</td>
            <td>{{deviceId}}</td>
            <td>{{eventModelId}}</td>
            <td>{{eventSource}}</td>
            <td>{{eventType}}</td>
            <td>
                <button class="btn btn-primary btn-fa-icon" id="btn-{{eventId}}" disabled>
                    <i class="fas fa-eye" onclick="viewPhotoWithCosmosDb(this)" eventId="{{eventId}}" deviceId="{{deviceId}}"></i>
                </button>
            </td>
        </tr>
        <tr class="hiddenRow collapse" id="event-{{eventId}}">
            <td colspan="12">
                <div class="accordian-body">
                    <pre id="pre-{{eventId}}"><code class="nohighlight">{{eventData}}</code></pre>
                </div>
            </td>
        </tr>
    </script>

    <script id="image-template" type="text/x-handlebars-template">
        <div class="filtr-item col-sm-1" data-category={{deviceId}} data-sort={{deviceId}}>
            <a href={{image_url}} data-toggle={{deviceId}} data-title={{image_file_name}}>
                <img src={{image_url}} class="img-fluid mb-1" alt={{image_file_name}} />
            </a>
        </div>
    </script>

    <script id="deviceList-template" type="text/x-handlebars-template">
        <tr>
            <td data-toggle="collapse" data-target="#deviceDetail-{{deviceId}}" class="accordian-toggle" style="width:1em">
                <button class="btn btn-primary btn-fa-icon btn-icon">
                    <i class="fas fa-angle-double-down" onclick="toggleTableDetail(this)" data-targetId="#deviceDetail-{{deviceId}}"></i>
                </button>
            </td>
            <td>{{deviceId}}</td>
            <td>{{deviceStatus}}</td>
            <td>{{deviceConnectionStatus}}</td>
        </tr>
        <tr class="hiddenRow collapse" id="deviceDetail-{{deviceId}}">
            <td colspan="4">
                <div class="accordian-body">
                    <pre><code class="nohighlight">{{dataPayload}}</code></pre>
                </div>
            </td>
        </tr>
    </script>

    <script id="modelList-template" type="text/x-handlebars-template">
        <tr>
            <td data-toggle="collapse" data-target="#modelDetail-{{modelId}}" class="accordian-toggle" style="width:1em">
                <button class="btn btn-primary btn-fa-icon btn-icon">
                    <i class="fas fa-angle-double-down" onclick="toggleTableDetail(this)" data-targetId="#modelDetail-{{modelId}}"></i>
                </button>
            </td>
            <td>{{modelId}}</td>
            <td>{{comment}}</td>
            <td>
                <button class="btn btn-primary btn-fa-icon" onclick="deleteModel(this)" targetModel="{{modelId}}">
                    <i class="fas fa-trash-alt" ></i>
                </button>
            </td>

        </tr>
        <tr class="hiddenRow collapse" id="modelDetail-{{modelId}}">
            <td colspan="12">
                <div class="accordian-body">
                    <pre><code class="nohighlight">{{dataPayload}}</code></pre>
                </div>
            </td>
        </tr>
    </script>

    <script id="deployConfiguraions-template" type="text/x-handlebars-template">
        <tr>
            <td data-toggle="collapse" data-target="#deployConfigurationDetail-{{config_id}}" class="accordian-toggle" style="width:1em">
                <button class="btn btn-primary btn-fa-icon btn-icon">
                    <i class="fas fa-angle-double-down" onclick="toggleTableDetail(this)" data-targetId="#deployConfigurationDetail-{{config_id}}"></i>
                </button>
            </td>
            <td>{{config_id}}</td>
            <td>{{config_comment}}</td>
            <td>
                <button class="btn btn-primary btn-fa-icon" onclick="deleteDeloyConfiguraions(this)" target_config_id="{{config_id}}">
                    <i class="fas fa-trash-alt"></i>
                </button>
            </td>

        </tr>
        <tr class="hiddenRow collapse" id="deployConfigurationDetail-{{config_id}}">
            <td colspan="12">
                <div class="accordian-body">
                    <pre><code class="nohighlight">{{dataPayload}}</code></pre>
                </div>
            </td>
        </tr>
    </script>
</body>
